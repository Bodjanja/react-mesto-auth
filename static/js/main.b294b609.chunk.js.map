{"version":3,"sources":["components/Register.js","components/Login.js","logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ProtectedRoute.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","images/accept.svg","images/reject.svg","components/InfoTooltip.js","utils/auth.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Register","redirectHandler","onRegister","React","useState","password","setPassword","email","setEmail","style","display","flexDirection","alignItems","className","onSubmit","e","preventDefault","name","type","placeholder","onChange","target","value","to","onClick","Login","props","loginHandler","Header","loggedIn","src","logo","alt","handleMenu","menuOpened","userData","signOut","color","loginPage","CurrentUserContext","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","onCardClick","onCardLike","length","id","onCardDelete","Main","onEditAvatar","avatar","about","onEditProfile","onAddPlace","cards","map","Footer","ProtectedRoute","Component","component","PopupWithForm","isOpen","title","noValidate","children","textOnButton","onClose","EditProfilePopup","onUpdateUser","setName","description","setDescription","useEffect","required","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","placeNameRef","placeLinkRef","ImagePopup","InfoTooltip","isRegistred","registerSuccess","registerFail","accept","reject","textAlign","marginTop","BASE_URL","checkResponse","response","ok","json","Promise","status","api","data","this","_baseUrl","baseUrl","_token","token","res","fetch","headers","authorization","then","_checkResponse","method","userName","userDescription","body","JSON","stringify","updateAvatar","cardName","cardLink","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isRegistrationPopupOpen","setIsRegistrationPopupOpen","selectedCard","setSelectedCard","signinPageActive","setSigninPageActive","setIsRegistred","setLoggedIn","setUserData","setMenuOpened","setCurrentUser","setCards","history","useHistory","handleRegistrationClick","closeAllPopups","handlePageRedirect","tokenCheck","localStorage","getItem","auth","push","info","handleUserData","catch","err","console","log","getUserData","user","getInitialCards","escCloseHandler","evt","key","document","addEventListener","removeEventListener","outerClickCloseHandler","classList","contains","Provider","backgroundColor","minHeight","removeItem","toggle","path","goBack","setItem","changeLikeCardStatus","newCard","state","c","removeCard","restCards","filter","item","editProfileData","userInfo","cardData","postNewCard","updateProfileAvatar","userAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b294b609.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Register({redirectHandler, onRegister}){\r\n    const [password, setPassword] = React.useState('')\r\n    const [email, setEmail] = React.useState('')\r\n\r\n    function handleEmailChange(e){\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    function handlePasswordChange(e){\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        onRegister(password, email)\r\n    }\r\n    \r\n        return(\r\n            <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n            <h2 className='popup__title popup__title_alternative'>Регистрация</h2>\r\n            <form className='form form_alternative' onSubmit={handleSubmit}>\r\n                <fieldset className='form__item form__item_alternative'>\r\n                    <input name='email' type='email' className='form__input-info form__input-info_alternative' placeholder='Email' onChange={handleEmailChange}></input>\r\n                    <input name='password' type='password' className='form__input-info form__input-info_alternative' placeholder='Пароль' onChange={handlePasswordChange}></input>\r\n                    <button className='popup__submit-button popup__submit-button_alternative'>Зарегистрироваться</button>\r\n                </fieldset>\r\n            </form>\r\n            <Link to='/sign-in' onClick={redirectHandler} className='link button-effects'>Уже зарегистрированы? Войти</Link>\r\n            </div>\r\n        )\r\n}","import React from \"react\"\r\n\r\nexport default function Login(props){\r\n\r\n    const [password, setPassword] = React.useState('')\r\n    const [email, setEmail] = React.useState('')\r\n\r\n    function handleEmailChange(e){\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    function handlePasswordChange(e){\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        props.loginHandler(password, email)\r\n\r\n    }\r\n\r\n    return(\r\n        <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n        <h2 className='popup__title popup__title_alternative'>Вход</h2>\r\n        <form className='form form_alternative' onSubmit={handleSubmit}>\r\n            <fieldset className='form__item form__item_alternative'>\r\n                <input name='loginEmail' type='email' className='form__input-info form__input-info_alternative' placeholder='Email' onChange={handleEmailChange}></input>\r\n                <input name='loginPassword' type='password' className='form__input-info form__input-info_alternative' placeholder='Пароль' onChange={handlePasswordChange}></input>\r\n                <button className='popup__submit-button popup__submit-button_alternative'>Войти</button>\r\n            </fieldset>\r\n        </form>\r\n        </div>\r\n    )}","export default __webpack_public_path__ + \"static/media/logo.bbe2a6ea.svg\";","import React from 'react';\r\nimport logo from '../logo.svg';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Header(props){\r\n  return(\r\n    <header className={`header header_position_align ${props.loggedIn ? 'header_loggedin' : ''}`}>\r\n        <div className={`header__container ${!props.loggedIn ? 'header__container_loggedin' : ''}`}>\r\n        <Link to={'#'} target=\"_self\">\r\n          <img src={logo} className=\"logo\" alt=\"Логотип\" />\r\n        </Link>\r\n        {props.loggedIn ? <button className='header__button button-effects' onClick={props.handleMenu}></button> : ''}\r\n        </div>\r\n        {props.loggedIn ?\r\n        <div className={`header__menu ${props.menuOpened ? 'header__menu_opened' : ''}`}>\r\n        <p className='header__data'>{props.userData.email}</p>\r\n        <Link className='header__link' to={'/sign-in'} onClick={props.signOut} style={{color: '#A9A9A9'}}>Выйти</Link>\r\n        </div>\r\n        :\r\n        <Link className='header__link' onClick={props.redirectHandler} to={props.loginPage ? '/sign-up' : '/sign-in'}>{props.loginPage ? 'Зарегистрироваться' : 'Войти'}</Link>}\r\n    </header>\r\n  )\r\n  }\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext({});","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props){\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = (\r\n    `button-effects ${isOwn ? 'element__bin' : 'element__bin_hidden'}`\r\n); \r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = (\r\n    `element__icon ${isLiked ? 'element__icon_liked' : ''}`\r\n); \r\n\r\n    function handleClick() {\r\n        props.onCardClick(props.card);\r\n        // console.log(props.card)\r\n      }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card);\r\n      }\r\n\r\n    function handleDeleteClick() {\r\n        props.onCardDelete(props.card);\r\n    }    \r\n\r\n    return(\r\n        <li className=\"element\">\r\n                <img className=\"element__image\" src={props.card.link} alt=\"\" onClick={handleClick}/>\r\n                <div className=\"element__container\">\r\n                    <h2 className=\"element__title\">{props.card.name}</h2>\r\n                    <div className=\"element__subcontainer\">\r\n                        <button type=\"button\" aria-label=\"Поставить лайк\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n                        <p className=\"element__like-counter\">{props.card.likes.length}</p>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" aria-label=\"Удалить карточку\" id=\"removebutton\"\r\n                    className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\r\n            </li>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card.js'\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n<main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__avatar-container\" onClick={props.onEditAvatar}>\r\n                    <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Аватар\"></img>\r\n                </div>\r\n                \r\n                <div className=\"profile__container\">\r\n                    <div className=\"profile__subcontainer\">\r\n                        <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n                        <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n                        <button onClick={props.onEditProfile} type=\"button\" aria-label=\"Отредактировать профиль\"\r\n                            className=\"profile__edition-button button-effects\"></button>\r\n                    </div>\r\n                    <button type=\"button\" aria-label=\"Добавить\" id=\"add\" onClick={props.onAddPlace}\r\n                        className=\"profile__add-button button-effects\"></button>\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"elements\">\r\n                <ul className=\"elements__list\">\r\n                    {props.cards.map((card, i) => (\r\n                        <Card key={card._id} card={card} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>\r\n                    ))}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n    <p className=\"footer__content\">&#169; 2020 Mesto Russia</p>\r\n</footer>\r\n  )}\r\n\r\n  export default Footer","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({component: Component, ...props}) => {\r\n    return(\r\n        <Route>\r\n            {() => props.loggedIn ? <Component {...props} /> : <Redirect to='/sign-in' /> }\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute","import React from 'react'\r\n\r\nfunction PopupWithForm (props) {\r\n\r\n    return (\r\n        <div className={`popup popup_${props.name} ${props.isOpen ? \"popup_opened\" : \"\"}`}>\r\n        <div className=\"popup__container\">\r\n            <h2 className=\"popup__title\">{props.title}</h2>\r\n            <form name={props.name} className={`form form_type_${props.name}`} onSubmit={props.onSubmit} noValidate>\r\n                <fieldset className=\"form__item\">\r\n                    {props.children}\r\n                    {/* Этот пропс передаёт уникальную разметку для разных попапов */}\r\n                    <button type=\"submit\" className=\"popup__submit-button popup__submit-button_edition\" value=\"Save\"\r\n                        aria-label=\"Добавить новую информацию профиля\">{props.textOnButton}</button>\r\n                </fieldset>\r\n            </form>\r\n            <button type=\"button\" aria-label=\"Закрыть редактирование\" className=\"popup__close popup__close_type_profile\" onClick={props.onClose}></button>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n    \r\n    export default PopupWithForm;","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n\r\n  function handleNameChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleDescriptionChange(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    //Меняем значение состояния имени и описания пользователя на ту информацию, которая приходит из API\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <PopupWithForm name=\"type_profile\" isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} title=\"Редактировать профиль\" textOnButton=\"Сохранить\">\r\n      <input id=\"username\" name=\"name\" type=\"text\" className=\"form__input-info form__input-info_type_name\" required placeholder=\"Введите имя\" minLength=\"2\" maxLength=\"40\" onChange={handleNameChange} value={name || \"\"}></input>\r\n      <span className=\"form__input-info-error\" id=\"username-error\"></span>\r\n      <input id=\"description\" name=\"description\" type=\"text\" className=\"form__input-info form__input-info_type_description\" required placeholder=\"Введите описание\" minLength=\"2\" maxLength=\"200\" onChange={handleDescriptionChange} value={description || \"\"}></input>\r\n      <span className=\"form__input-info-error\" id=\"description-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n      \r\n        onUpdateAvatar({\r\n            avatar: avatarRef.current.value /* Значение инпута, полученное с помощью рефа */,\r\n        });\r\n      } \r\n\r\n    return(\r\n        <PopupWithForm name=\"avatar-update\" isOpen={isOpen} onClose={onClose} title=\"Обновить аватар\" textOnButton=\"Сохранить\" onSubmit={handleSubmit}>\r\n        <input name=\"updateAvatar\" id=\"avatar\" className=\"form__input-info form__input-info_type_avatar\" type=\"url\"\r\n        placeholder=\"Ссылка на аватар\" ref={avatarRef} required></input>\r\n        <span className=\"form__input-info-error\" id=\"avatar-error\"></span>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n  const placeNameRef = React.useRef();\r\n  const placeLinkRef = React.useRef();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    onAddPlace({\r\n      name: placeNameRef.current.value,\r\n      link: placeLinkRef.current.value,\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      placeNameRef.current.value = \"\";\r\n      placeLinkRef.current.value = \"\";\r\n    };\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <PopupWithForm name=\"type_addition\" isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} title=\"Новое место\" textOnButton=\"Создать\">\r\n      <input id=\"newplace\" name=\"additionName\" className=\"form__input-info form__input-info_type_place\" type=\"text\" placeholder=\"Название\" required minLength=\"2\" maxLength=\"30\" ref={placeNameRef}></input>\r\n      <span className=\"form__input-info-error\" id=\"newplace-error\"></span>\r\n      <input id=\"newplaceimg\" name=\"additionPhoto\" className=\"form__input-info form__input-info_type_image\" type=\"url\" placeholder=\"Ссылка на картинку\" ref={placeLinkRef} required></input>\r\n      <span className=\"form__input-info-error\" id=\"newplaceimg-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React from 'react'\r\n\r\nfunction ImagePopup(props){\r\n\r\n    return(\r\n        <div className={`popup popup_type_photo ${props.card.link ? 'popup_opened' : ''}`}>\r\n        <div className=\"popup__figurecaption\">\r\n            <img className=\"popup__image\" src={props.card.link} alt={props.card.name} />\r\n            <p className=\"popup__caption\">{props.card.name}</p>\r\n            <button type=\"button\" aria-label=\"Закрыть картинку\" className=\"popup__close popup__close_type_photo\" onClick={props.onClose}></button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ImagePopup","export default __webpack_public_path__ + \"static/media/accept.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/reject.df8eddf6.svg\";","import React from \"react\";\r\nimport accept from \"../images/accept.svg\"\r\nimport reject from \"../images/reject.svg\"\r\n\r\nexport default function InfoTooltip({isRegistred, isOpen, onClose, registerSuccess, registerFail}){\r\n    return(\r\n        <div className={`popup ${isOpen ? 'popup_opened' : ''}`}>\r\n            <div className='popup__container popup__container_alternative'>\r\n            <img alt={isRegistred ? 'данные корректны' : 'данные некорректны'} src={isRegistred ? accept : reject} />\r\n            <h2 className='popup__title' style={{textAlign: 'center', marginTop: 32}}>{isRegistred ? registerSuccess : registerFail}</h2>\r\n            <button type=\"button\" aria-label=\"Закрыть редактирование\" className=\"popup__close popup__close_type_profile\" onClick={onClose}></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const BASE_URL = 'https://auth.nomoreparties.co'\r\n\r\nfunction checkResponse(response){\r\n    if (response.ok) {\r\n      return response.json()\r\n    }\r\n    else{return Promise.reject(`Ошибка: ${response.status}`)}\r\n  }\r\n\r\nexport const register = (password, email) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            password,\r\n            email\r\n        })\r\n    })\r\n    .then((response) => checkResponse(response))\r\n}\r\n\r\nexport const login = (password, email) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        })\r\n        .then((response) => checkResponse(response))\r\n}\r\n\r\nexport const checkToken = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token}`\r\n            },\r\n        })\r\n        .then((response) => checkResponse(response))\r\n}","class Api {\r\n    constructor(data) {\r\n      this._baseUrl = data.baseUrl\r\n      this._token = data.token\r\n    }\r\n  \r\n    _checkResponse(res){\r\n      if (res.ok) {\r\n        return res.json()\r\n      }\r\n      else{return Promise.reject(`Ошибка: ${res.status}`)}\r\n    }\r\n  \r\n    getInitialCards() {//Получить все начальные карточки с сервера для вставки их в разметку\r\n      return fetch(`${this._baseUrl}/cards`, {\r\n          headers: {\r\n            authorization: `${this._token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        .then(this._checkResponse)\r\n    }\r\n  \r\n    getUserData() {//Получить информацию о профиле с сервера для вставки в разметку\r\n      return fetch(`${this._baseUrl}/users/me`, {\r\n          method: 'GET',\r\n          headers: {\r\n            authorization: `${this._token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        .then(this._checkResponse)\r\n    }\r\n  \r\n    editProfileData(userName, userDescription) {//Отправить отредактированные данные профиля на сервер\r\n      return fetch(`${this._baseUrl}/users/me`, {\r\n          method: 'PATCH',\r\n          headers: {\r\n            authorization: `${this._token}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            name: userName,\r\n            about: userDescription\r\n          })\r\n        })\r\n        .then(this._checkResponse)\r\n    }\r\n  \r\n    updateProfileAvatar(updateAvatar) {//Отправить отредактированный URL аватара на сервер\r\n      return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n          method: 'PATCH',\r\n          headers: {\r\n            authorization: `${this._token}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            avatar: updateAvatar\r\n          })\r\n        })\r\n        .then(this._checkResponse)\r\n    }\r\n  \r\n    postNewCard(cardName, cardLink) {//Отправить на сервер новую карточку и добавить её в разметку\r\n      return fetch(`${this._baseUrl}/cards`, {\r\n          method: 'POST',\r\n          headers: {\r\n            authorization: `${this._token}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            name: cardName,\r\n            link: cardLink\r\n          })\r\n        })\r\n        .then(this._checkResponse)\r\n    }\r\n  \r\n    removeCard(_id){//Удаление карточки на сервере\r\n      return fetch(`${this._baseUrl}/cards/${_id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          authorization: `${this._token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      .then(this._checkResponse)\r\n    }\r\n  \r\n    changeLikeCardStatus(_id, isLiked) {\r\n      return fetch(`${this._baseUrl}/cards/likes/${_id}`, {\r\n              method: `${isLiked ? 'PUT' : 'DELETE'}`,\r\n              headers: {\r\n                  authorization: this._token\r\n              }\r\n          })\r\n      .then(this._checkResponse)\r\n    }\r\n  \r\n  }\r\n  \r\n  const api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25',\r\n    token: '1244c08d-1491-4631-b0bc-6d7f22b0d3e5'\r\n    }\r\n  );\r\n\r\n  export default api;","import React from \"react\";\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\n\r\nimport Register from \"./Register\";\r\nimport Login from \"./Login\"\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\n\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport InfoTooltip from \"./InfoTooltip\";\r\n\r\nimport * as auth from \"../utils/auth\";\r\nimport api from \"../utils/api.js\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction App() {\r\n  //Хуки-переменные состояния, отвечающие за видимость попапов\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isRegistrationPopupOpen, setIsRegistrationPopupOpen] = React.useState(false)\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n  const [signinPageActive, setSigninPageActive] = React.useState(true);\r\n  const [isRegistred, setIsRegistred] = React.useState()\r\n  const [loggedIn, setLoggedIn] = React.useState(false)\r\n  const [userData, setUserData] = React.useState('')\r\n  const [menuOpened, setMenuOpened] = React.useState(false)\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({}); //Хук состояния для рендера информации о профиле\r\n  const [cards, setCards] = React.useState([]); //Хук состояния для добавления карт из начального массива\r\n\r\n  const history = useHistory()\r\n\r\n  // ---------------------------------------------------\r\n\r\n  React.useEffect(() => {\r\n    if(loggedIn){\r\n    api.getUserData()\r\n      .then((user) => {\r\n        setCurrentUser(user);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n      }}, [loggedIn]);\r\n\r\n  React.useEffect(() => {\r\n    api.getInitialCards()\r\n      .then((card) => {\r\n        setCards(card);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    tokenCheck()\r\n  }, [])\r\n\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function handleRegistrationClick(){\r\n    setIsRegistrationPopupOpen(true)\r\n  }\r\n\r\n  function handleUpdateUser(data) {\r\n    //Отправка отредактированных данных пользователя на сервер и их рендер на странице\r\n    api.editProfileData(data.name, data.about)\r\n      .then((userInfo) => {\r\n        setCurrentUser(userInfo);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleUpdateAvatar(data) {\r\n    //Отправка отредактированного аватара пользователя на сервер и его рендер на странице\r\n    api.updateProfileAvatar(data.avatar)\r\n      .then((userAvatar) => {\r\n        setCurrentUser(userAvatar);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleAddPlaceSubmit(cardData) {\r\n    //Отправка новый карточек на сервер и добавление их в общий массив для рендера\r\n    api.postNewCard(cardData.name, cardData.link)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  \r\n  function closeAllPopups() {\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsRegistrationPopupOpen(false);\r\n    setSelectedCard({});\r\n  }\r\n\r\n  function handleHeaderMenu(e) {//Меняем иконку при открытии и закрытии меню \r\n    e.target.classList.toggle('header__button_close')\r\n    setMenuOpened(!menuOpened)\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        setCards((state) =>\r\n          state.map((c) => (c._id === card._id ? newCard : c))\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    api.removeCard(card._id)\r\n      .then(() => {\r\n        const restCards = cards.filter((item) => {\r\n          return item._id !== card._id;\r\n        });\r\n        setCards(restCards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handlePageRedirect(){//Изменение состояния переменной при перемещении между страницами приложения\r\n    setSigninPageActive(!signinPageActive)\r\n  }\r\n  function handleLogin(password, email){\r\n    auth.login(password, email)\r\n    .then((res) => {\r\n        if (res.token) {\r\n            localStorage.setItem('token', res.token)\r\n            setLoggedIn(true)\r\n            tokenCheck()\r\n            return res;\r\n        } else {\r\n            return;\r\n        }\r\n    })\r\n    .catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleUserData(info){//Сохранение почты для вставки в header при логине\r\n    const userData = {\r\n      email: info.data.email\r\n    }\r\n    setUserData(userData)\r\n  }\r\n\r\n\r\n  function handleSignOut(){\r\n    localStorage.removeItem('token')\r\n    history.push('/sign-in')\r\n    setLoggedIn(false)\r\n  }\r\n\r\n  function tokenCheck(){\r\n    if(localStorage.getItem('token')){\r\n      let token = localStorage.getItem('token')\r\n      auth.checkToken(token)\r\n      .then((res) => {\r\n        if(res){\r\n          setLoggedIn(true)\r\n          history.push('/')\r\n          handleUserData(res)\r\n          }\r\n        return res;\r\n      })\r\n      .catch((err) => console.log(err));\r\n      }\r\n  }\r\n\r\n  const onRegister = (password, email) => {//Запрос к бэкэнду для регистрации нового пользователя\r\n        auth.register(password, email)\r\n        .then((res) => {\r\n          if(res){\r\n            history.goBack()\r\n            handlePageRedirect()\r\n            setIsRegistred(true)//Стейт для попапа успешной/неуспешной регистрации\r\n            handleRegistrationClick()\r\n            }\r\n            return res;\r\n        })\r\n        .catch((err) => {\r\n        console.log(err)\r\n        setIsRegistred(false)\r\n        handleRegistrationClick()});\r\n      }\r\n\r\n// -------------------------------------------------------------------------------\r\n  \r\n  React.useEffect(() => {\r\n    //Хук, отвечающий за закрытие попапов при нажатии на кнопку Escape\r\n    const escCloseHandler = (evt) => {\r\n      if (evt.key === \"Escape\") {\r\n        closeAllPopups();\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", escCloseHandler);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", escCloseHandler);\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    //Хук, отвечающий за закрытие попапов при клике на оверлей\r\n    const outerClickCloseHandler = (evt) => {\r\n      if (evt.target.classList.contains(\"popup\")) {\r\n        closeAllPopups();\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", outerClickCloseHandler);\r\n    return () => {\r\n      document.removeEventListener(\"click\", outerClickCloseHandler);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div style={{ backgroundColor: \"black\", minHeight: '100vh' }}>\r\n        <div className=\"page\">\r\n          <div id=\"#root\" className=\"root\">\r\n            <Header loginPage={signinPageActive} redirectHandler={handlePageRedirect} loggedIn={loggedIn} userData={userData} signOut={handleSignOut} handleMenu={handleHeaderMenu} menuOpened={menuOpened} />\r\n            <Switch>\r\n            <Route path='/sign-up'>\r\n              <Register onRegister={onRegister} redirectHandler={handlePageRedirect}/>\r\n            </Route>\r\n\r\n            <Route path='/sign-in'>\r\n              <Login loginHandler={handleLogin} tokenCheck={tokenCheck} />\r\n            </Route>\r\n\r\n            <ProtectedRoute path='/' loggedIn={loggedIn} component={Main}\r\n              cards={cards}\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onCardClick={handleCardClick}\r\n              onCardLike={handleCardLike}\r\n              onCardDelete={handleCardDelete}>\r\n              </ProtectedRoute>\r\n            \r\n            <Footer />\r\n            </Switch>\r\n          </div>\r\n          <EditProfilePopup\r\n            isOpen={isEditProfilePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateUser={handleUpdateUser}\r\n          />\r\n\r\n          <AddPlacePopup\r\n            isOpen={isAddPlacePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onAddPlace={handleAddPlaceSubmit}\r\n          />\r\n\r\n          <EditAvatarPopup\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateAvatar={handleUpdateAvatar}\r\n          />\r\n\r\n          <InfoTooltip isRegistred={isRegistred} registerSuccess={'Вы успешно зарегистрировались!'} registerFail={'Что-то пошло не так! Попробуйте ещё раз'} isOpen={isRegistrationPopupOpen} onClose={closeAllPopups}/>\r\n\r\n          <PopupWithForm\r\n            name=\"confirmation\"\r\n            title=\"Вы уверены?\"\r\n            textOnButton=\"Да\"\r\n          ></PopupWithForm>\r\n\r\n          <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n        </div>\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}